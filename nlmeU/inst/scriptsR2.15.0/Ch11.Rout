
R version 2.15.0 (2012-03-30)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ###################################################
> ### code chunk: Chap11init
> ###################################################
> options(width = 65, digits = 5, show.signif.stars = FALSE)
> date()
[1] "Wed Mar 06 17:39:46 2013"
> packageVersion("nlme")
[1] '3.1.103'
> packageVersion("lattice")
[1] '0.20.6'
> sessionInfo()
R version 2.15.0 (2012-03-30)
Platform: x86_64-pc-mingw32/x64 (64-bit)

locale:
[1] LC_COLLATE=C                          
[2] LC_CTYPE=English_United States.1252   
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C                          
[5] LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods  
[7] base     
> 
> library(nlme)
> library(lattice)
> 
> ###################################################
> ### code chunk number 7: R11.1
> ###################################################
>  tx <- c(0, 10^-2, 0.8)          # Auxilary vector
>  cX <-                           # corExp object defined
+    corExp(value = c(1, 0.2),     # range rho:(10.16), nugget rho0: (10.18)
+           form = ~tx, 
+           nugget = TRUE)         # Nugget defined 
>  Dtx <- data.frame(tx)         
>  (cXi <-                         # corExp object initialized
+    Initialize(cX, data = Dtx))
Correlation structure of class corExp representing
 range nugget 
   1.0    0.2 
>  (getCovariate(cXi))             # tx diffs: 2-1, 3-1, 3-2
[1] 0.01 0.80 0.79
>  Vrg <- Variogram(cXi)           # Semi-variogram created ...
>  plot(Vrg, smooth = FALSE,       # ... and plotted. Fig. 10.1a
+       type = "l")
>  corFunDt <-                     # Data for correlation function
+     data.frame(dist = Vrg$dist,
+                corF = 1 - Vrg$variog)
>  plot(corFunDt,                  # Corr function plotted with ...
+       type = "l", ylim = c(0,1)) # ... traditional graphics ... 
>  xyplot(corF ~ dist,             # ... and xyplot().  Fig. 10.1b
+     data = corFunDt, type = "l")
> 
> 
> ###################################################
> ### code chunk: Syntax for Fig. 10.1a
> ###################################################
> 
> xlab <- "Distance (s)"
> myPanel1 <- function(x,y,subscripts,...){
+   panel.xyplot(x, y, ...)
+   panel.grid(h = -1, v = -1)
+   panel.xyplot(x, y, ...) 
+   lpoints(0, 0, type = "p", pch = 19, cex = 1.2) 
+   lpoints(0, 0.2, type = "p", pch = 1, cex = 1.2) 
+ }
>  
> xyplot(variog ~ dist, 
+        data = Vrg,
+        type = "l",
+        ylim = c(-0.1,1.1),
+        panel = myPanel1, 
+        ylab = "", 
+        xlab = xlab)
>   
> ###################################################
> ### code chunk: Syntax for Fig. 10.1b
> ###################################################
> 
> myPanel2 <- function(x,y,subscripts,...){
+   panel.xyplot(x, y, ...)
+   panel.grid(h = -1, v = -1)
+   panel.xyplot(x, y, ...) # over-write grid
+   lpoints(0, 1, type = "p", pch = 19, cex = 1.2) 
+   lpoints(0, 0.8, type ="p", pch = 1, cex = 1.2) 
+ }
> 
> xyplot(corF ~ dist,
+   data = corFunDt,
+   type = "l",
+   ylim = c(-0.1, 1.1),
+   panel = myPanel2, 
+   ylab = "",
+   xlab= xlab
+ )
> 
> ###################################################
> ### code chunk number 2: R11.2
> ###################################################
> subj <- rep(1:2, each = 4)               # Two subjects
> occ  <- rep(1:4, 2)                      # Four observations each
> loc1 <- rep(c(0, 0.2, 0.4, 0.8), 2)      # First coordinate
> loc2 <-                                  # Second coordinate 
+    c(0, 0.2, 0.4, 0.8, 0, 0.1, 0.2, 0.4) 
> df0  <-                                  # Hypothetical data frame
+    data.frame(subj, occ, loc1, loc2)
> (df  <-                                  # Occ = 3 for subj.2 deleted
+    subset(df0, subj != 2 | occ != 3))    
  subj occ loc1 loc2
1    1   1  0.0  0.0
2    1   2  0.2  0.2
3    1   3  0.4  0.4
4    1   4  0.8  0.8
5    2   1  0.0  0.0
6    2   2  0.2  0.1
8    2   4  0.8  0.4
> 
> 
> ###################################################
> ### code chunk number 3: R11.3
> ###################################################
> cs <-                                       # Object defined...
+    corCompSymm(value = 0.3, form = ~1|subj) 
> cs <- Initialize(cs, df)                    # ... initialized
> coef(cs, unconstrained = FALSE)             # Constrained coefficient
Rho 
0.3 
> coef(cs)                       # Unconstrained = log((1/3+.3)/(1-.3))
[1] -0.10008
> getCovariate(cs)                            # Positions in series
$`1`
[1] 1 2 3 4

$`2`
[1] 1 2 3

> corMatrix(cs)                               # Corr. matrix displayed
$`1`
     [,1] [,2] [,3] [,4]
[1,]  1.0  0.3  0.3  0.3
[2,]  0.3  1.0  0.3  0.3
[3,]  0.3  0.3  1.0  0.3
[4,]  0.3  0.3  0.3  1.0

$`2`
     [,1] [,2] [,3]
[1,]  1.0  0.3  0.3
[2,]  0.3  1.0  0.3
[3,]  0.3  0.3  1.0

> 
> ###################################################
> ### code chunk: R11.4
> ###################################################
> cs1 <- corAR1(0.3, form = ~tx)   # Uninitialized corAR1 struct
> coef(cs1, unconstrained = FALSE) # Constrained coefficient 
Phi 
0.3 
> coef(cs1)                        # Unconstrained = log((1+.3)/(1-.3))
[1] 0.61904
> tx  <- 1:4                       # A covariate with values 1, 2, 3, 4
> corMatrix(cs1, covariate = tx)   # Corr(Ri) of uninitialized object 
      [,1] [,2] [,3]  [,4]
[1,] 1.000 0.30 0.09 0.027
[2,] 0.300 1.00 0.30 0.090
[3,] 0.090 0.30 1.00 0.300
[4,] 0.027 0.09 0.30 1.000
> df2 <- data.frame(tx)            # An auxiliary data frame
> cs1i <-                          # Initialized corAR1 object
+    Initialize(cs1, data = df2) 
> corMatrix(cs1i)                  # corAR1 matrix displayed
      [,1] [,2] [,3]  [,4]
[1,] 1.000 0.30 0.09 0.027
[2,] 0.300 1.00 0.30 0.090
[3,] 0.090 0.30 1.00 0.300
[4,] 0.027 0.09 0.30 1.000
> (chL <-                          # Cholesky factor L= (U') ^(-1)
+    corMatrix(cs1i, corr = FALSE))
         [,1]     [,2]     [,3]   [,4]
[1,]  1.00000  0.00000  0.00000 0.0000
[2,] -0.31449  1.04828  0.00000 0.0000
[3,]  0.00000 -0.31449  1.04828 0.0000
[4,]  0.00000  0.00000 -0.31449 1.0483
attr(,"logDet")
[1] 0.14147
> solve(t(chL) %*% chL)            # Back to Corr(Ri) = U'U =(L'L)^(-1) 
      [,1] [,2] [,3]  [,4]
[1,] 1.000 0.30 0.09 0.027
[2,] 0.300 1.00 0.30 0.090
[3,] 0.090 0.30 1.00 0.300
[4,] 0.027 0.09 0.30 1.000
> 
> ###################################################
> ### code chunk: R11.5a
> ###################################################
> car <-                            # Not-recommended syntax ...
+    corAR1(value = 0.3, form = ~1|subj) 
> carI <- Initialize(car, df)       # corAR1 class object initialized
> getCovariate(carI)                # Position=order of observations for a subject     
$`1`
[1] 1 2 3 4

$`2`
[1] 1 2 3

> corMatrix(carI)[[1]]              # Correct matrix for the 1st subject
      [,1] [,2] [,3]  [,4]
[1,] 1.000 0.30 0.09 0.027
[2,] 0.300 1.00 0.30 0.090
[3,] 0.090 0.30 1.00 0.300
[4,] 0.027 0.09 0.30 1.000
> corMatrix(carI)[[2]]              # Incorrect matrix for the 2nd subject
     [,1] [,2] [,3]
[1,] 1.00  0.3 0.09
[2,] 0.30  1.0 0.30
[3,] 0.09  0.3 1.00
> 
> ###################################################
> ### code chunk: R11.5b
> ###################################################
> car1 <- corAR1(value = 0.3, form = ~occ|subj)   # Recommended syntax
> car1 <- Initialize(car1, df)      # corAR1 classs object initialized  
> getCovariate(car1)                # Correct positions based on the occ variable
$`1`
[1] 1 2 3 4

$`2`
[1] 1 2 4

> corMatrix(car1)[[2]]              # Correct matrix for the 2nd subject
      [,1] [,2]  [,3]
[1,] 1.000 0.30 0.027
[2,] 0.300 1.00 0.090
[3,] 0.027 0.09 1.000
> 
> 
> ###################################################
> ### code chunk: R11.6a
> ###################################################
> ceE <- corExp(value = 1, form = ~loc1 + loc2 | subj)# Euclidean metric 
> ceE <- Initialize(ceE, df)     
> corMatrix(ceE)         # List with corr matrices for both subjects
$`1`
        [,1]    [,2]    [,3]    [,4]
[1,] 1.00000 0.75364 0.56797 0.32259
[2,] 0.75364 1.00000 0.75364 0.42804
[3,] 0.56797 0.75364 1.00000 0.56797
[4,] 0.32259 0.42804 0.56797 1.00000

$`2`
        [,1]    [,2]    [,3]
[1,] 1.00000 0.79963 0.40884
[2,] 0.79963 1.00000 0.51129
[3,] 0.40884 0.51129 1.00000

> 
> ###################################################
> ### code chunk: R11.6b
> ###################################################
> ceM <-                                          # Manhattan metric
+    corExp(1, ~ loc1 + loc2 | subj, metric = "man") 
> ceM <- Initialize(ceM, df)
> corMatrix(ceM)[[1]]              # Corr matrix for the 1st subject
        [,1]    [,2]    [,3]    [,4]
[1,] 1.00000 0.67032 0.44933 0.20190
[2,] 0.67032 1.00000 0.67032 0.30119
[3,] 0.44933 0.67032 1.00000 0.44933
[4,] 0.20190 0.30119 0.44933 1.00000
> 
> ###################################################
> ### code chunk: R11.6c
> ###################################################
> ceEn <-                          # nugget = 0.2
+    corExp(c(1, 0.2), ~ loc1 + loc2 | subj, nugget = TRUE) 
> ceEn <- Initialize(ceEn, df)
> coef(ceEn, unconstrained=FALSE)  # Constrained rho, rho0
 range nugget 
   1.0    0.2 
> corMatrix(ceEn)[[1]]             # Corr matrix for the 1st subject
        [,1]    [,2]    [,3]    [,4]
[1,] 1.00000 0.60291 0.45438 0.25807
[2,] 0.60291 1.00000 0.60291 0.34244
[3,] 0.45438 0.60291 1.00000 0.45438
[4,] 0.25807 0.34244 0.45438 1.00000
> 
> ### SessionInfo 
> sessionInfo()     # with packages attached
R version 2.15.0 (2012-03-30)
Platform: x86_64-pc-mingw32/x64 (64-bit)

locale:
[1] LC_COLLATE=C                          
[2] LC_CTYPE=English_United States.1252   
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C                          
[5] LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods  
[7] base     

other attached packages:
[1] lattice_0.20-6 nlme_3.1-103  

loaded via a namespace (and not attached):
[1] grid_2.15.0
> detach(package:nlme)
> detach(package:lattice)
> 
> proc.time()
   user  system elapsed 
   1.02    0.03    1.06 
