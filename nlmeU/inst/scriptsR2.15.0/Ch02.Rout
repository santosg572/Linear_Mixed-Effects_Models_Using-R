
R version 2.15.0 (2012-03-30)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ###################################################
> ### code chunk: Ch01init
> ###################################################
> options(width=65, digits=5, show.signif.stars = FALSE )
> date()
[1] "Wed Mar 06 17:39:35 2013"
> packageVersion("nlmeU")
[1] '0.30.7'
> packageVersion("nlme")
[1] '3.1.103'
> sessionInfo()
R version 2.15.0 (2012-03-30)
Platform: x86_64-pc-mingw32/x64 (64-bit)

locale:
[1] LC_COLLATE=C                          
[2] LC_CTYPE=English_United States.1252   
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C                          
[5] LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods  
[7] base     
> 
> 
> ###################################################
> ### code chunk: R2.1
> ###################################################
> ## dataDir <- file.path("C:", "temp")                # Data directory
> dataDir <- file.path(.Library, "nlmeU", "csvData")   # Directory in nlmeU package
> fp   <- file.path(dataDir, "armd240.data.csv")       # .csv file path
> armd240.data <- read.csv(fp, header = TRUE)          # Loading csv data
> dim(armd240.data)                                    # No. of rows and cols
[1] 240   9
> (nms <- names(armd240.data))                         # Variables' names
[1] "subject"  "treat"    "lesion"   "line0"    "visual0" 
[6] "visual4"  "visual12" "visual24" "visual52"
> unique(sapply(armd240.data, class))                  # Variables' classes
[1] "integer"
> str(armd240.data)                                    # Data structure
'data.frame':	240 obs. of  9 variables:
 $ subject : int  1 2 3 4 5 6 7 8 9 10 ...
 $ treat   : int  2 2 1 1 2 2 1 1 2 1 ...
 $ lesion  : int  3 1 4 2 1 3 1 3 2 1 ...
 $ line0   : int  12 13 8 13 14 12 13 8 12 10 ...
 $ visual0 : int  59 65 40 67 70 59 64 39 59 49 ...
 $ visual4 : int  55 70 40 64 NA 53 68 37 58 51 ...
 $ visual12: int  45 65 37 64 NA 52 74 43 49 71 ...
 $ visual24: int  NA 65 17 64 NA 53 72 37 54 71 ...
 $ visual52: int  NA 55 NA 68 NA 42 65 37 58 NA ...
> names(armd240.data) <- abbreviate(nms)               # Variables' names shortened
> head(armd240.data, 3)                                # First 3 records
  sbjc tret lesn lin0 vsl0 vsl4 vs12 vs24 vs52
1    1    2    3   12   59   55   45   NA   NA
2    2    2    1   13   65   70   65   65   55
3    3    1    4    8   40   40   37   17   NA
> names(armd240.data) <- nms                           # Variables' names reinstated
> 
> 
> ###################################################
> ### code chunk: R2.2
> ###################################################
> data(armd.wide, package = "nlmeU")                   # armd.wide data loaded
> str(armd.wide)                                       # Structure of data
'data.frame':	240 obs. of  10 variables:
 $ subject : Factor w/ 240 levels "1","2","3","4",..: 1 2 3 4 5 6 7 8 9 10 ...
 $ lesion  : int  3 1 4 2 1 3 1 3 2 1 ...
 $ line0   : int  12 13 8 13 14 12 13 8 12 10 ...
 $ visual0 : int  59 65 40 67 70 59 64 39 59 49 ...
 $ visual4 : int  55 70 40 64 NA 53 68 37 58 51 ...
 $ visual12: int  45 65 37 64 NA 52 74 43 49 71 ...
 $ visual24: int  NA 65 17 64 NA 53 72 37 54 71 ...
 $ visual52: int  NA 55 NA 68 NA 42 65 37 58 NA ...
 $ treat.f : Factor w/ 2 levels "Placebo","Active": 2 2 1 1 2 2 1 1 2 1 ...
 $ miss.pat: Factor w/ 9 levels "----","---X",..: 4 1 2 1 9 1 1 1 1 2 ...
> head(armd.wide)                                      # First few records
  subject lesion line0 visual0 visual4 visual12 visual24
1       1      3    12      59      55       45       NA
2       2      1    13      65      70       65       65
3       3      4     8      40      40       37       17
4       4      2    13      67      64       64       64
5       5      1    14      70      NA       NA       NA
6       6      3    12      59      53       52       53
  visual52 treat.f miss.pat
1       NA  Active     --XX
2       55  Active     ----
3       NA Placebo     ---X
4       68 Placebo     ----
5       NA  Active     XXXX
6       42  Active     ----
> (facs <- sapply(armd.wide, is.factor))               # Factors indicated 
 subject   lesion    line0  visual0  visual4 visual12 visual24 
    TRUE    FALSE    FALSE    FALSE    FALSE    FALSE    FALSE 
visual52  treat.f miss.pat 
   FALSE     TRUE     TRUE 
> names(facs[facs == TRUE])                            # Factor names displayed                  
[1] "subject"  "treat.f"  "miss.pat"
> 
> 
> ###################################################
> ### code chunk: R2.3a
> ###################################################
> attach(armd240.data)                                 # Attach armd240.data
> treat.f <- factor(treat,                             # Factor created 
+   labels = c("Placebo", "Active")                    # 1 -> Placebo, 2 -> Active
+ ) 
> levels(treat.f)
[1] "Placebo" "Active" 
> str(treat.f)
 Factor w/ 2 levels "Placebo","Active": 2 2 1 1 2 2 1 1 2 1 ...
> 
> 
> ###################################################
> ### code chunk: R2.3b
> ###################################################
> miss.pat <-                                # missing patterns
+     nlmeU:::missPat(visual4, visual12, visual24, visual52)  
> length(miss.pat)                           # Vector length
[1] 240
> mode(miss.pat)                             # Vector mode
[1] "character"
> miss.pat                                   # Vector contents 
  [1] "--XX" "----" "---X" "----" "XXXX" "----" "----" "----"
  [9] "----" "---X" "-XXX" "----" "----" "----" "----" "----"
 [17] "----" "----" "----" "----" "XXXX" "----" "----" "----"
 [25] "----" "----" "----" "XXXX" "----" "-XXX" "-XXX" "---X"
 [33] "----" "----" "----" "----" "---X" "---X" "----" "----"
 [41] "--XX" "----" "----" "----" "----" "----" "---X" "XXXX"
 [49] "----" "--X-" "----" "----" "----" "----" "----" "---X"
 [57] "----" "----" "----" "----" "----" "----" "----" "----"
 [65] "----" "----" "----" "----" "----" "----" "----" "----"
 [73] "---X" "----" "----" "----" "----" "----" "----" "----"
 [81] "----" "----" "----" "----" "----" "----" "----" "----"
 [89] "----" "---X" "---X" "----" "----" "----" "----" "----"
 [97] "---X" "X---" "----" "--X-" "X---" "----" "----" "----"
[105] "----" "----" "----" "----" "----" "----" "----" "----"
[113] "----" "--XX" "----" "----" "----" "----" "----" "----"
[121] "----" "-XXX" "----" "----" "----" "----" "----" "----"
[129] "----" "----" "--XX" "----" "---X" "----" "----" "---X"
[137] "----" "----" "----" "----" "----" "----" "----" "XXXX"
[145] "----" "----" "---X" "-XXX" "----" "---X" "----" "----"
[153] "----" "----" "----" "----" "----" "----" "----" "----"
[161] "----" "----" "-XXX" "----" "----" "----" "--XX" "----"
[169] "----" "----" "----" "----" "----" "--XX" "----" "----"
[177] "---X" "----" "----" "----" "----" "----" "----" "----"
[185] "----" "-XX-" "----" "----" "XXXX" "----" "--X-" "----"
[193] "----" "----" "----" "---X" "---X" "---X" "----" "---X"
[201] "---X" "----" "----" "---X" "----" "----" "X-XX" "----"
[209] "----" "----" "----" "----" "--XX" "----" "----" "--XX"
[217] "----" "----" "---X" "----" "----" "----" "----" "----"
[225] "----" "----" "----" "----" "----" "--X-" "---X" "----"
[233] "----" "----" "----" "----" "----" "----" "----" "----"
> detach(armd240.data)                       # Detach armd240.data
> 
> 
> ###################################################
> ### code chunk: R2.4
> ###################################################
> data(armd0, package = "nlmeU")             # From nlmeU package
> dim(armd0)                                 # No. of rows and cols
[1] 1107    8
> head(armd0)                                # First six records
  subject treat.f visual0 miss.pat   time.f time visual tp
1       1  Active      59     --XX Baseline    0     59  0
2       1  Active      59     --XX     4wks    4     55  1
3       1  Active      59     --XX    12wks   12     45  2
4       2  Active      65     ---- Baseline    0     65  0
5       2  Active      65     ----     4wks    4     70  1
6       2  Active      65     ----    12wks   12     65  2
> names(armd0)                               # Variables' names
[1] "subject"  "treat.f"  "visual0"  "miss.pat" "time.f"  
[6] "time"     "visual"   "tp"      
> str(armd0)                                 # Data structure    
'data.frame':	1107 obs. of  8 variables:
 $ subject : Factor w/ 240 levels "1","2","3","4",..: 1 1 1 2 2 2 2 2 3 3 ...
 $ treat.f : Factor w/ 2 levels "Placebo","Active": 2 2 2 2 2 2 2 2 1 1 ...
 $ visual0 : int  59 59 59 65 65 65 65 65 40 40 ...
 $ miss.pat: Factor w/ 9 levels "----","---X",..: 4 4 4 1 1 1 1 1 2 2 ...
 $ time.f  : Ord.factor w/ 5 levels "Baseline"<"4wks"<..: 1 2 3 1 2 3 4 5 1 2 ...
 $ time    : num  0 4 12 0 4 12 24 52 0 4 ...
 $ visual  : int  59 55 45 65 70 65 65 55 40 40 ...
 $ tp      : num  0 1 2 0 1 2 3 4 0 1 ...
> 
> 
> ###################################################
> ### code chunk: R2.5
> ###################################################
> auxDt <- subset(armd0, time > 0)          # Post-baseline measures
> dim(auxDt)                                # No. of rows & cols
[1] 867   8
> levels(auxDt$time.f)                      # Levels of treat.f
[1] "Baseline" "4wks"     "12wks"    "24wks"    "52wks"   
> armd <- droplevels(auxDt)                 # Drop unused levels   
> levels(armd$time.f)                       # Baseline level dropped
[1] "4wks"  "12wks" "24wks" "52wks"
> armd <- within(armd, {                    # Contrasts assigned
+    contrasts(time.f) <- contr.poly(4, scores = c(4, 12, 24, 52))
+ })
> head(armd)                                # First six records
  subject treat.f visual0 miss.pat time.f time visual tp
2       1  Active      59     --XX   4wks    4     55  1
3       1  Active      59     --XX  12wks   12     45  2
5       2  Active      65     ----   4wks    4     70  1
6       2  Active      65     ----  12wks   12     65  2
7       2  Active      65     ----  24wks   24     65  3
8       2  Active      65     ----  52wks   52     55  4
> 
> 
> ###################################################
> ### code chunk: R2.6a
> ###################################################
> fp <- file.path(dataDir, "prt.subjects.data.csv")
> prt.subjects.data <- read.csv(fp, header = TRUE, as.is = TRUE) 
> dim(prt.subjects.data)
[1] 63  6
> names(prt.subjects.data)
[1] "id"       "gender"   "ageGrp"   "trainGrp" "height"  
[6] "weight"  
> str(prt.subjects.data)
'data.frame':	63 obs. of  6 variables:
 $ id      : int  5 10 15 20 25 35 45 50 60 70 ...
 $ gender  : chr  "F" "F" "F" "F" ...
 $ ageGrp  : int  0 0 1 1 1 0 0 1 0 0 ...
 $ trainGrp: int  0 1 1 1 1 0 0 0 0 1 ...
 $ height  : num  1.56 1.71 1.67 1.55 1.69 1.69 1.72 1.61 1.71 1.68 ...
 $ weight  : num  61.9 66 70.9 62 79.1 74.5 89 68.9 62.9 68.1 ...
> head(prt.subjects.data, 4)
  id gender ageGrp trainGrp height weight
1  5      F      0        0   1.56   61.9
2 10      F      0        1   1.71   66.0
3 15      F      1        1   1.67   70.9
4 20      F      1        1   1.55   62.0
> 
> 
> ###################################################
> ### code chunk: R2.6b
> ###################################################
> fp <- file.path(dataDir, "prt.fiber.data.csv")
> prt.fiber.data <- read.csv(fp, header = TRUE) 
> str(prt.fiber.data)
'data.frame':	2471 obs. of  5 variables:
 $ id           : int  5 5 5 5 5 5 5 5 5 5 ...
 $ fiber.type   : int  1 1 2 1 2 1 1 1 2 1 ...
 $ train.pre.pos: int  0 0 0 0 0 0 0 0 0 0 ...
 $ iso.fo       : num  0.265 0.518 0.491 0.718 0.16 0.41 0.371 0.792 0.649 0.604 ...
 $ spec.fo      : num  83.5 132.8 161.1 158.8 117.9 ...
> head(prt.fiber.data, 4)
  id fiber.type train.pre.pos iso.fo spec.fo
1  5          1             0  0.265    83.5
2  5          1             0  0.518   132.8
3  5          2             0  0.491   161.1
4  5          1             0  0.718   158.8
> 
> 
> ###################################################
> ### code chunk: R2.7a
> ###################################################
> prt.subjects <- within(prt.subjects.data,{
+    id    <- factor(id)
+    bmi   <- weight/(height^2)
+    sex.f <- factor(gender, labels = c("Female", "Male"))
+    age.f <- factor(ageGrp, labels = c("Young", "Old"))
+    prt.f <- factor(trainGrp, levels = c("1", "0"), 
+              labels = c("High", "Low"))
+    gender<- ageGrp <- trainGrp <- height <- weight <- NULL
+ })
> str(prt.subjects)
'data.frame':	63 obs. of  5 variables:
 $ id   : Factor w/ 63 levels "5","10","15",..: 1 2 3 4 5 6 7 8 9 10 ...
 $ prt.f: Factor w/ 2 levels "High","Low": 2 1 1 1 1 2 2 2 2 1 ...
 $ age.f: Factor w/ 2 levels "Young","Old": 1 1 2 2 2 1 1 2 1 1 ...
 $ sex.f: Factor w/ 2 levels "Female","Male": 1 1 1 1 1 1 2 1 2 2 ...
 $ bmi  : num  25.4 22.6 25.4 25.8 27.7 ...
> 
> 
> ###################################################
> ### code chunk: R2.7b
> ###################################################
> prt.fiber  <- within(prt.fiber.data, {
+    id      <- factor(id)
+    fiber.f <- factor(fiber.type, 
+                labels = c("Type 1", "Type 2"))
+    occ.f   <- factor(train.pre.pos, 
+                labels = c("Pre", "Pos"))     
+    fiber.type <- train.pre.pos <- NULL
+ })
> str(prt.fiber)
'data.frame':	2471 obs. of  5 variables:
 $ id     : Factor w/ 63 levels "5","10","15",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ iso.fo : num  0.265 0.518 0.491 0.718 0.16 0.41 0.371 0.792 0.649 0.604 ...
 $ spec.fo: num  83.5 132.8 161.1 158.8 117.9 ...
 $ occ.f  : Factor w/ 2 levels "Pre","Pos": 1 1 1 1 1 1 1 1 1 1 ...
 $ fiber.f: Factor w/ 2 levels "Type 1","Type 2": 1 1 2 1 2 1 1 1 2 1 ...
> 
> 
> ###################################################
> ### code chunk: R2.8
> ###################################################
> prt <- merge(prt.subjects, prt.fiber, sort=FALSE)
> dim(prt)
[1] 2471    9
> names(prt)
[1] "id"      "prt.f"   "age.f"   "sex.f"   "bmi"     "iso.fo" 
[7] "spec.fo" "occ.f"   "fiber.f"
> head(prt)
  id prt.f age.f  sex.f    bmi iso.fo spec.fo occ.f fiber.f
1  5   Low Young Female 25.436  0.265    83.5   Pre  Type 1
2  5   Low Young Female 25.436  0.518   132.8   Pre  Type 1
3  5   Low Young Female 25.436  0.491   161.1   Pre  Type 2
4  5   Low Young Female 25.436  0.718   158.8   Pre  Type 1
5  5   Low Young Female 25.436  0.160   117.9   Pre  Type 2
6  5   Low Young Female 25.436  0.410    87.8   Pre  Type 1
> 
> 
> ###################################################
> ### code chunk: R2.9
> ###################################################
> data(classroom, package = "WWGbook")
> dim(classroom)                       # Number of rows & variables
[1] 1190   12
> names(classroom)                     # Variable names
 [1] "sex"      "minority" "mathkind" "mathgain" "ses"     
 [6] "yearstea" "mathknow" "housepov" "mathprep" "classid" 
[11] "schoolid" "childid" 
> # classroom                          # Raw data (long output)
> str(classroom)
'data.frame':	1190 obs. of  12 variables:
 $ sex     : int  1 0 1 0 0 1 0 0 1 0 ...
 $ minority: int  1 1 1 1 1 1 1 1 1 1 ...
 $ mathkind: int  448 460 511 449 425 450 452 443 422 480 ...
 $ mathgain: int  32 109 56 83 53 65 51 66 88 -7 ...
 $ ses     : num  0.46 -0.27 -0.03 -0.38 -0.03 0.76 -0.03 0.2 0.64 0.13 ...
 $ yearstea: num  1 1 1 2 2 2 2 2 2 2 ...
 $ mathknow: num  NA NA NA -0.11 -0.11 -0.11 -0.11 -0.11 -0.11 -0.11 ...
 $ housepov: num  0.082 0.082 0.082 0.082 0.082 0.082 0.082 0.082 0.082 0.082 ...
 $ mathprep: num  2 2 2 3.25 3.25 3.25 3.25 3.25 3.25 3.25 ...
 $ classid : int  160 160 160 217 217 217 217 217 217 217 ...
 $ schoolid: int  1 1 1 1 1 1 1 1 1 1 ...
 $ childid : int  1 2 3 4 5 6 7 8 9 10 ...
> 
> 
> ###################################################
> ### code chunk: R2.10
> ###################################################
> SIIdata <- within(classroom, {
+    sex <- factor(sex, 
+         levels = c(0, 1),
+         labels = c("M", "F"))             # 0 -> 1(M),  1 -> 2(F) 
+    minority <- factor(minority, 
+         labels = c("Mnrt:No", "Mnrt:Yes"))# 0 -> 1(No), 1 -> 2(Yes)
+    schoolid <- factor(schoolid)         
+    classid  <- factor(classid)          
+    childid  <- factor(childid)
+ })
> str(SIIdata)
'data.frame':	1190 obs. of  12 variables:
 $ sex     : Factor w/ 2 levels "M","F": 2 1 2 1 1 2 1 1 2 1 ...
 $ minority: Factor w/ 2 levels "Mnrt:No","Mnrt:Yes": 2 2 2 2 2 2 2 2 2 2 ...
 $ mathkind: int  448 460 511 449 425 450 452 443 422 480 ...
 $ mathgain: int  32 109 56 83 53 65 51 66 88 -7 ...
 $ ses     : num  0.46 -0.27 -0.03 -0.38 -0.03 0.76 -0.03 0.2 0.64 0.13 ...
 $ yearstea: num  1 1 1 2 2 2 2 2 2 2 ...
 $ mathknow: num  NA NA NA -0.11 -0.11 -0.11 -0.11 -0.11 -0.11 -0.11 ...
 $ housepov: num  0.082 0.082 0.082 0.082 0.082 0.082 0.082 0.082 0.082 0.082 ...
 $ mathprep: num  2 2 2 3.25 3.25 3.25 3.25 3.25 3.25 3.25 ...
 $ classid : Factor w/ 312 levels "1","2","3","4",..: 160 160 160 217 217 217 217 217 217 217 ...
 $ schoolid: Factor w/ 107 levels "1","2","3","4",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ childid : Factor w/ 1190 levels "1","2","3","4",..: 1 2 3 4 5 6 7 8 9 10 ...
> 
> 
> ###################################################
> ### code chunk: R2.11
> ###################################################
> rdaDir <- file.path("C:", "temp")         # Dir path
> fp <- file.path(rdaDir, "SIIdata.Rdata")  # External file path
> save(SIIdata, file = fp)                  # Save data
> file.exists(fp)                           
[1] TRUE
> (load(fp))                                # Load data
[1] "SIIdata"
> 
> 
> ###################################################
> ### code chunk: R2.12
> ###################################################
> data(SIIdata, package = "nlmeU")         # Load data
> dtId <- subset(SIIdata, select = c(schoolid, classid, childid))
> names(dtId)                              # id names
[1] "schoolid" "classid"  "childid" 
> any(duplicated(dtId))                    # Any duplicate ids?
[1] FALSE
> require(nlme)
Loading required package: nlme
> names(gsummary(dtId, form = ~childid, inv = TRUE))
[1] "schoolid" "classid"  "childid" 
> names(gsummary(dtId, form = ~classid, inv = TRUE))
[1] "schoolid" "classid" 
> names(gsummary(dtId, form = ~schoolid, inv = TRUE))
[1] "schoolid"
> 
> 
> ###################################################
> ### code chunk: R2.13a
> ###################################################
> (nms1 <- names(gsummary(SIIdata,
+     form = ~schoolid,              # schoolid-specific
+     inv = TRUE))) 
[1] "housepov" "schoolid"
> 
> 
> ###################################################
> ### code chunk: R2.13b
> ###################################################
> nms2a <- names(gsummary(SIIdata, 
+     form = ~classid,               # classid- and schoolid-specific 
+     inv = TRUE)) 
> idx1  <- match(nms1, nms2a)
> (nms2 <- nms2a[-idx1])             # classid-specific
[1] "yearstea" "mathknow" "mathprep" "classid" 
> 
> 
> ###################################################
> ### code chunk: R2.13c
> ###################################################
> nms3a <- names(gsummary(SIIdata, 
+                  form = ~childid,  # All
+                  inv = TRUE)
+ )
> idx12 <- match(c(nms1, nms2), nms3a)
> nms3a[-idx12]                      # childid-specific
[1] "sex"      "minority" "mathkind" "mathgain" "ses"     
[6] "childid" 
> 
> 
> ###################################################
> ### code chunk: R2.14
> ###################################################
> fp <- file.path(dataDir, "crossreg.data.csv")
> crossreg.data <- read.csv(fp, header = TRUE) 
> dim(crossreg.data)                      # No. of rows and columns
[1] 4851    3
> names(crossreg.data)                    # Variable names
[1] "target" "id"     "scorec"
> head(crossreg.data)                     # First six records
  target id scorec
1      1  1      4
2      2  1      6
3      3  1      4
4      4  1      1
5      5  1      7
6      6  1      6
> str(crossreg.data)                      # Data structure
'data.frame':	4851 obs. of  3 variables:
 $ target: int  1 2 3 4 5 6 7 8 9 1 ...
 $ id    : int  1 1 1 1 1 1 1 1 1 2 ...
 $ scorec: int  4 6 4 1 7 6 6 5 5 3 ...
> 
> 
> ###################################################
> ### code chunk: R2.15
> ###################################################
> unique(crossreg.data$target)          # Unique values for target
[1] 1 2 3 4 5 6 7 8 9
> (unique(crossreg.data$id))            # Unique values for id 
  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15
 [16]  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30
 [31]  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45
 [46]  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60
 [61]  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75
 [76]  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90
 [91]  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105
[106] 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120
[121] 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135
[136] 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150
[151] 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165
[166] 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
[181] 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
[196] 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210
[211] 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225
[226] 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240
[241] 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255
[256] 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270
[271] 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285
[286] 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300
[301] 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315
[316] 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330
[331] 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345
[346] 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360
[361] 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375
[376] 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390
[391] 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405
[406] 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420
[421] 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435
[436] 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450
[451] 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465
[466] 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480
[481] 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495
[496] 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510
[511] 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525
[526] 526 527 528 529 530 531 532 533 534 535 536 537 538 539
> unique(crossreg.data$scorec)          # Unique values for scorec
 [1] 4 6 1 7 5 3 2 8 0 9
> summary(crossreg.data$scorec)         # Summary statistics for scorec
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    0.0     3.0     4.0     3.9     5.0     9.0 
> 
> 
> ###################################################
> ### code chunk: R2.16a
> ###################################################
> nItms  <- c(4, 6, 8, 5, 9, 6, 8, 6, 5)        # See Table 2.1
> (lbls <- paste("T", 1:9, "(", nItms, ")", sep = ""))
[1] "T1(4)" "T2(6)" "T3(8)" "T4(5)" "T5(9)" "T6(6)" "T7(8)"
[8] "T8(6)" "T9(5)"
> fcat <- within(crossreg.data, {
+         id <- factor(id)
+         target <- factor(target, labels = lbls)
+ })
> str(fcat)
'data.frame':	4851 obs. of  3 variables:
 $ target: Factor w/ 9 levels "T1(4)","T2(6)",..: 1 2 3 4 5 6 7 8 9 1 ...
 $ id    : Factor w/ 539 levels "1","2","3","4",..: 1 1 1 1 1 1 1 1 1 2 ...
 $ scorec: int  4 6 4 1 7 6 6 5 5 3 ...
> 
> 
> ###################################################
> ### code chunk: R2.16b
> ###################################################
> tab1 <- xtabs(~ id + target, data = fcat)     # id by target table
> tab1[c(1,2,539),]
     target
id    T1(4) T2(6) T3(8) T4(5) T5(9) T6(6) T7(8) T8(6) T9(5)
  1       1     1     1     1     1     1     1     1     1
  2       1     1     1     1     1     1     1     1     1
  539     1     1     1     1     1     1     1     1     1
> all(tab1 > 0)                                 # All counts > 0? 
[1] TRUE
> range(tab1)                                   # Range of counts
[1] 1 1
> 
> 
> ###################################################
> ### code chunk: Cleanup
> ###################################################
> rm(armd240.data, armd.wide, armd0, armd)           # Data not needed
> rm(prt.fiber.data, prt.subjects.data, prt.fiber, prt.subjects, prt)
> rm(classroom, SIIdata) 
> rm(crossreg.data, fcat) 
> rm(dataDir, rdaDir, auxDt)
> rm(treat.f, miss.pat, facs, lbls)
> rm(nms,nms1, nms2, nms2a, nms3a)
> rm(idx1, idx12, nItms, tab1, dtId)
> 
> ### sessionInfo
>   
> sessionInfo()            # with packages attached
R version 2.15.0 (2012-03-30)
Platform: x86_64-pc-mingw32/x64 (64-bit)

locale:
[1] LC_COLLATE=C                          
[2] LC_CTYPE=English_United States.1252   
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C                          
[5] LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods  
[7] base     

other attached packages:
[1] nlme_3.1-103

loaded via a namespace (and not attached):
[1] grid_2.15.0    lattice_0.20-6 nlmeU_0.30-7   tools_2.15.0  
> detach(package:nlme)
> 
> proc.time()
   user  system elapsed 
   0.74    0.03    0.78 
